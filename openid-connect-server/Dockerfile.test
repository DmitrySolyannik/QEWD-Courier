FROM node:10-alpine
  # g++ \
  # make \
  # bash \

RUN apk add --no-cache \
  curl \
  go \
  git

# ENV WAITFORIT_VERSION="v2.2.1"
# RUN curl -o /usr/local/bin/waitforit \
#   -sSL https://github.com/maxcnunes/waitforit/releases/download/$WAITFORIT_VERSION/waitforit-linux_amd64 && \
#   chmod +x /usr/local/bin/waitforit

# SHELL ["/bin/bash", "--login", "-c"]

# RUN go env

# # ENV GOROOT /usr/lib/go
# # ENV GOPATH /go
# ENV PATH /root/go/bin:${PATH}
# RUN echo 'PATH="/root/go/bin:$PATH"' >> /root/.profile
# RUN echo 'GOROOT=/usr/lib/go' >> /root/.profile
# RUN mkdir -p ${GOPATH}/src ${GOPATH}/bin

# WORKDIR /usr/lib/go/src
# RUN cat Make.dist
# # RUN Make script ('/usr/lib/go/src/make.bash') does not exist!

# RUN go get -u github.com/laher/goxc
# RUN echo $PATH
# RUN goxc --version
# RUN goxc -t

# RUN mkdir -p /usr/local/src
# WORKDIR /usr/local/src
# RUN curl -o waitforit.tar.gz https://codeload.github.com/nsteinmetz/waitforit/tar.gz/master
# RUN tar -xvzf waitforit.tar.gz
# WORKDIR /usr/local/src/waitforit-master
# RUN make build
# RUN cp builds/2.2.0/linux_amd64 /usr/local/bin/waitforit && chmod +x /usr/local/bin/waitforit
COPY ./waitforit /usr/local/bin/waitforit
RUN chmod +x /usr/local/bin/waitforit

RUN waitforit -v

RUN mkdir -p /opt/src
COPY . /opt/src


WORKDIR /opt/src
RUN npm install

ENTRYPOINT ["waitforit", "-address=http://10.5.0.2:8080/healthcheck", "-status", "200", "-timeout", "60", "--"]
CMD ["npm", "test"]
